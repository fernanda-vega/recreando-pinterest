{"version":3,"sources":["Components/Navbar.js","Components/Image.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","xmlns","width","height","viewBox","d","fillRule","clipRule","fill","aria-label","role","placeholder","type","cheight","aria-hidden","Image","props","state","href","src","this","url","alt","tags","author","Component","App","images","query","start","count","showImg","bind","scrollData","fetch","then","response","json","data","setState","hits","catch","error","console","log","concat","map","image","index","key","webformatURL","user","dataLength","length","next","hasMore","loader","endMessage","style","textAlign","breakpointCols","default","2000","1200","1440","1100","700","500","columnClassName","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8acfa757.chunk.js","sourcesContent":["import React from 'react';\nimport './Navbar.css';\n\nfunction Navbar() {\n   return (\n      <nav className=\"headerContainer\">\n         <div className=\"headerContent\">\n            <div className=\"pinterest-icon\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"28\" height=\"28\" viewBox=\"0 0 24 24\"><path d=\"M12 0c-6.627 0-12 5.372-12 12 0 5.084 3.163 9.426 7.627 11.174-.105-.949-.2-2.405.042-3.441.218-.937 1.407-5.965 1.407-5.965s-.359-.719-.359-1.782c0-1.668.967-2.914 2.171-2.914 1.023 0 1.518.769 1.518 1.69 0 1.029-.655 2.568-.994 3.995-.283 1.194.599 2.169 1.777 2.169 2.133 0 3.772-2.249 3.772-5.495 0-2.873-2.064-4.882-5.012-4.882-3.414 0-5.418 2.561-5.418 5.207 0 1.031.397 2.138.893 2.738.098.119.112.224.083.345l-.333 1.36c-.053.22-.174.267-.402.161-1.499-.698-2.436-2.889-2.436-4.649 0-3.785 2.75-7.262 7.929-7.262 4.163 0 7.398 2.967 7.398 6.931 0 4.136-2.607 7.464-6.227 7.464-1.216 0-2.359-.631-2.75-1.378l-.748 2.853c-.271 1.043-1.002 2.35-1.492 3.146 1.124.347 2.317.535 3.554.535 6.627 0 12-5.373 12-12 0-6.628-5.373-12-12-12z\" fillRule=\"evenodd\" clipRule=\"evenodd\" fill='#e60023'/></svg></div>\n\n            \n            <div className=\"commonBox\">\n               <div className=\"search-container\">\n                  <div className=\"search-bar\">\n                     <svg className=\"search-icon\" height=\"20\" width=\"20\" viewBox=\"0 0 24 24\" aria-label=\"Icono de bÃºsqueda\" role=\"img\"><path d=\"M10 16c-3.31 0-6-2.69-6-6s2.69-6 6-6 6 2.69 6 6-2.69 6-6 6m13.12 2.88l-4.26-4.26A9.842 9.842 0 0 0 20 10c0-5.52-4.48-10-10-10S0 4.48 0 10s4.48 10 10 10c1.67 0 3.24-.41 4.62-1.14l4.26 4.26a3 3 0 0 0 4.24 0 3 3 0 0 0 0-4.24\"></path></svg>\n                     <input className=\"search-input\" placeholder=\"Buscar\" type='text'></input>\n                  </div>\n               </div>\n            </div>\n\n            <div className=\"button-container\">\n               <div className=\"nav-button\"><div className=\"btn\">Inicio</div></div>\n               <div className=\"nav-button\"><div className=\"btn\">Siguiendo</div></div>\n               <div className=\"nav-button\">\n                  <div className=\"icon\"><div className=\"user-icon\">F</div></div>\n                  <div className=\"btn\">Fernanda</div>\n               </div>\n               <span className=\"nav-separator\"></span>\n               <div className=\"pinterest-icon\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M18 12.5a1.5 1.5 0 1 1 .001-3.001A1.5 1.5 0 0 1 18 12.5m-6 0a1.5 1.5 0 1 1 .001-3.001A1.5 1.5 0 0 1 12 12.5m-6 0a1.5 1.5 0 1 1 .001-3.001A1.5 1.5 0 0 1 6 12.5M12 0C5.925 0 1 4.925 1 11c0 2.653.94 5.086 2.504 6.986L2 24l5.336-3.049A10.93 10.93 0 0 0 12 22c6.075 0 11-4.925 11-11S18.075 0 12 0\" fillRule=\"evenodd\" clipRule=\"evenodd\" fill='#8e8e8e'></path></svg></div>\n               <div className=\"pinterest-icon\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\"><path fill=\"#8e8e8e\" d=\"M8 16c-1.12 0-2.03-.9-2.03-2h4.06c0 1.1-.91 2-2.03 2zm4.72-6.92c1.02.95 1.74 2.19 2.03 3.59H1.25c.29-1.4 1.01-2.64 2.02-3.59V4.67C3.27 2.09 5.39 0 8 0c2.61 0 4.72 2.09 4.72 4.67v4.41z\"></path></svg></div>\n               <div className=\"pinterest-icon\"><svg cheight=\"22\" width=\"22\" viewBox=\"0 0 24 24\" aria-hidden=\"true\" aria-label=\"\" role=\"img\"><path fill=\"#8e8e8e\" d=\"M12 9c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3M3 9c1.66 0 3 1.34 3 3s-1.34 3-3 3-3-1.34-3-3 1.34-3 3-3zm18 0c1.66 0 3 1.34 3 3s-1.34 3-3 3-3-1.34-3-3 1.34-3 3-3z\"></path></svg></div>\n            </div>\n\n         </div>\n      </nav>\n   )\n}\n\nexport default Navbar;","import React, { Component } from 'react';\nimport './Image.css';\n\n\nclass Image extends Component{\n\n    constructor(props) {\n        super(props)\n        this.state = { }\n    }\n  \n    render(){\n        return(\n            <div className=\"item\">\n                <div className=\"ima-display\">\n                    <a href=\"\"> \n                        <img src={this.props.url} alt=\"\"/>\n                        <div className=\"ima-detail\">\n                            <p className=\"ima-title\">{this.props.tags}</p>\n                            <p className=\"ima-user\">{this.props.author}</p>\n                        </div>\n                    </a>\n                </div>\n            </div>\n        )\n    }\n}\nexport default Image;","import React, { Component } from 'react';\nimport Navbar from './Components/Navbar';\nimport Image from './Components/Image';\nimport './App.css';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport Masonry from 'react-masonry-css'\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      images: [],\n      query:'',\n      start: 1,\n      count: 1\n    }\n    this.showImg = this.showImg.bind(this);\n    this.scrollData = this.scrollData.bind(this);\n  }\n\n//trayendo las fotos\n  componentDidMount(){\n    fetch(`https://pixabay.com/api/?key=1858501-7166f0d9f959bd64071f003d7&image_type=photo&orientation=vertical&per_page=20`)\n    .then(response => response.json())\n    .then(data => this.setState({images: data.hits}))\n    .catch(error => console.log('parsing failed', error))\n  }\n\n  scrollData(){\n    const { start } = this.state;\n    this.setState({ start: this.state.start + this.state.count});\n    fetch(`https://pixabay.com/api/?key=1858501-7166f0d9f959bd64071f003d7&image_type=photo&orientation=vertical&page=${start}&per_page=20`)\n    .then(response => response.json())\n    .then(data => this.setState({images: this.state.images.concat(data.hits)}))\n    .catch(error => console.log('parsing failed', error))\n}\n\n//mostrando las fotos\n  showImg(){\n    return(\n      this.state.images.map((image, index) => {\n        return (\n          <Image  key={index} url={image.webformatURL} tags={image.tags} author={image.user}/>\n        )\n      })\n    )\n  }\n\n  render(){\n\n    const breakpointColumnsObj = {\n      default: 9,\n      2000: 7,\n      1200: 6,\n      1440: 5,\n      1100: 3,\n      700: 2,\n      500: 1\n    };\n\n    return (\n      <div className=\"App\">\n        <header>\n          <Navbar/>\n        </header>\n        <main className=\"main-container\">\n          <div className=\"masonery-container\">\n            <InfiniteScroll \n                dataLength={this.state.images.length}\n                next={this.scrollData}\n                hasMore={true}\n                loader={<h4 >Cargando...</h4>}\n                endMessage={<p style={{textAlign: 'center'}}><b>Â¡Ya lo has visto todo!</b> </p>}\n              >\n\n                <Masonry\n                  breakpointCols={breakpointColumnsObj}\n                  className=\"my-masonry-grid\"\n                  columnClassName=\"my-masonry-grid_column\">\n                  {this.showImg()}\n                </Masonry>\n\n              </InfiniteScroll>\n          </div>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}